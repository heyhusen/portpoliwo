name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          tools: composer
          coverage: none

      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Composer cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-interaction

      - name: Setup database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Run tests
        run: |
          php artisan config:clear
          php artisan test

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          APP_NAME: ${{ github.event.repository.name }}
          APP_URL: https://${{ github.event.repository.name }}.herokuapp.com
          APP_KEY: ${{ secrets.APP_KEY }}
          SESSION_DOMAIN: .${{ github.event.repository.name }}.herokuapp.com
          SANCTUM_STATEFUL_DOMAINS: ${{ github.event.repository.name }}.herokuapp.com
          DB_CONNECTION: pgsql
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          CACHE_DRIVER: redis
          SESSION_DRIVER: cookie
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          FILESYSTEM_DRIVER: s3
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_ENDPOINT: ${{ secrets.AWS_ENDPOINT }}
          AWS_USE_PATH_STYLE_ENDPOINT: true
          MIX_APP_NAME: ${{ github.event.repository.name }}
        with:
          context: .
          push: true
          tags: registry.heroku.com/${{ github.event.repository.name }}/web

      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a ${{ github.event.repository.name }} web
